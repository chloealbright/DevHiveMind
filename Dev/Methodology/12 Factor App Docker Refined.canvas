{
	"nodes":[
		{"type":"group","id":"5b095c0847bb1724","x":-1640,"y":-2921,"width":3920,"height":3401,"label":"Untitled group","background":"_Files/download.jpeg"},
		{"type":"group","id":"d6aceac64b8beacd","x":-160,"y":-1844,"width":920,"height":1444,"color":"5","label":"Docker Container"},
		{"type":"text","text":"# Codebase","id":"2770616b01398b88","x":124,"y":-1792,"width":357,"height":50,"color":"1"},
		{"type":"text","text":"# Build, release, run","id":"02d203c03b445c3b","x":-676,"y":-1698,"width":357,"height":60,"color":"#008419"},
		{"type":"text","text":"5. Build, release, run: Docker standardizes the build, release, and run stages of your app in language/runtime/OS agnostic manner. The app can be built using a Dockerfile, released as a container image, and then run in any environment that supports Docker, providing consistency and reproducibility. While also improving things like scalability, load balancing, monitoring and alerting.","id":"f5c994ed978f387d","x":-698,"y":-1638,"width":402,"height":278,"color":"#008419"},
		{"type":"text","text":"```dockerfile\n\nFROM node:12.19.0-alpine\n\n# Create app directory\nWORKDIR /usr/app/\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY ./package*.json ./\n\n# If you are building your code for production\n# RUN npm ci --only=production\n#RUN npm ci -qy\n# RUN npm install\nRUN npm install && npm run resolve && npm audit\n\n\n# Bundle app source\nCOPY api/ ./api\n\n# Expose Port 3000\nEXPOSE 8000\n\nCMD [\"npm\", \"run\", \"dev\"]\n```\n","id":"2fe4d594798fca5b","x":-1560,"y":-1957,"width":780,"height":597},
		{"type":"text","text":"# Dependencies","id":"00f95b49f3bec496","x":124,"y":-1198,"width":357,"height":64,"color":"2"},
		{"type":"text","text":"## DockerFile Example","id":"2bea3ea49a76f93e","x":-1295,"y":-2060,"width":310,"height":60,"color":"4"},
		{"type":"text","text":"1. Codebase: A twelve-factor app most important factor is the codebase which is the glue that connects all the other factors. Lets say you have a banking app and you have it stored in a version control system (such as Git). Now the code is available to run in different environments but the environments can very and require additional setup. In order to bypass this we decide to use Docker. Docker enables us to build the app into a image once and consistently deploy container instances for local development, QE, SIT, PAT and Production environments eliminating extra setup.","id":"56e9dc8872bf1c00","x":103,"y":-1742,"width":402,"height":420,"color":"1"},
		{"type":"text","text":"<center>\n  <h4 style=\"font-size: 120px; -webkit-text-stroke: 1px green; -webkit-text-fill-color: transparent;\">12 Factor App </h4>\n</center>\n\n","id":"620a520eb3537581","x":-390,"y":-2383,"width":1155,"height":171,"color":"4"},
		{"type":"text","text":"<center>\n  <h2 style=\"font-size: 30px; -webkit-text-stroke: 1px green; -webkit-text-fill-color: transparent;\">App Image </h4>\n</center>\n","id":"1e4c931185f3893a","x":-199,"y":-1628,"width":220,"height":80,"color":"#00e7eb"},
		{"type":"text","text":"# Concurrency","id":"39202e6985a608a7","x":969,"y":-1804,"width":357,"height":60,"color":"#0084ff"},
		{"type":"text","text":"# Admin processes","id":"a84aa8ba6a356b76","x":970,"y":-2383,"width":357,"height":64,"color":"#0084ff"},
		{"type":"text","text":"12. Admin processes: Administrative tasks, such as Database Migrations, Data Seeding, or User Management, that should be kept separate from the main application processes to prevent interference with regular application operations along with separate deployment from the main application . Using Docker allows you to execute administrative processes within a container, ensuring consistency and avoiding environment-specific issues while maintaining separation of concerns ensuring that administrative activities don't impact the stability, performance, maintenance, and security of the main running application.","id":"9c69777429a16b39","x":947,"y":-2316,"width":402,"height":436,"color":"#0084ff"},
		{"type":"text","text":"# Port binding","id":"a243d63a9c435823","x":-89,"y":-846,"width":357,"height":50,"color":"2"},
		{"type":"text","text":"7. Port binding: Your app should be self-contained and bind to a specific port  for external access. Docker enables you to expose and map container ports to host ports, allowing external access to the app through a designated port.","id":"6cc6cbb1be7ba8d8","x":-112,"y":-791,"width":402,"height":245,"color":"2"},
		{"type":"text","text":"3. Config: Configuration parameters (such as database connection strings, API keys, etc.) should be stored in the environment. Docker allows you to set environment variables that can be set during container runtime, allowing the banking app to access the necessary configurations.","id":"debdd86c106f9720","x":320,"y":-786,"width":402,"height":236,"color":"2"},
		{"type":"text","text":"# Config","id":"147b6815df4c27d9","x":347,"y":-836,"width":357,"height":50,"color":"2"},
		{"type":"text","text":"# Logs","id":"fb0de56d4024a980","x":943,"y":-666,"width":357,"height":60,"color":"#0084ff"},
		{"type":"text","text":"2. Dependencies: The app's dependencies, such as libraries or frameworks, should be explicitly declared and isolated. Docker allows you to define a Dockerfile that specifies the app's dependencies, ensuring consistent execution across different environments.","id":"ecbb264a55737045","x":101,"y":-1132,"width":402,"height":214,"color":"2"},
		{"type":"text","text":"8. Concurrency: The app should scale out horizontally by adding more processes, rather than increasing the size of individual processes. Docker's orchestration tools (Kubernetes, Nomad, Swarm, etc) can automatically manage the scaling of your app based on defined rules and resource utilization.","id":"1f8a63011e8478b5","x":946,"y":-1742,"width":402,"height":228,"color":"#0084ff"},
		{"type":"text","text":"### Proper logging becomes crucial. During shutdown and startup processes, detailed logging helps track the state of the application, identify potential issues, and ensure that it recovers properly after restarting.","id":"dc253a87da2a0e32","x":1325,"y":-636,"width":595,"height":162,"color":"#d726e4"},
		{"type":"text","text":"# Backing services","id":"bdcfe17acb1c78c5","x":943,"y":-312,"width":357,"height":60,"color":"#0084ff"},
		{"type":"text","text":"4. Backing services: External services (such as databases, message queues, or caching systems) should be treated as attached resources. Docker's container networking capabilities enables your code to connect to and utilize these services as needed while maintaining modularity which can help with deployment strategies.","id":"9a1441edd06b9f59","x":920,"y":-250,"width":402,"height":224,"color":"#0084ff"},
		{"type":"text","text":"11. Logs: The app should generate logs as event streams for monitoring and troubleshooting, providing insight into its behavior. The app should only log to STDOUT or STDERR streams so standard container tools can forward them into a centralized logging system, which is required to monitor and troubleshoot your app.","id":"26c8d8262d44d256","x":920,"y":-606,"width":402,"height":246,"color":"#0084ff"},
		{"type":"text","text":"### Stateless Processes","id":"db171d437fa48b1c","x":997,"y":-1442,"width":255,"height":60,"color":"#5250d3"},
		{"type":"text","text":"### Horizontal Scaling","id":"9c818777999236af","x":997,"y":-1382,"width":255,"height":60,"color":"#5250d3"},
		{"type":"text","text":"### Load Balancing","id":"376319485d4f8292","x":997,"y":-1322,"width":255,"height":60,"color":"#5250d3"},
		{"type":"text","text":"9. Disposability: **The twelve-factor app’s processes are  _disposable_, meaning they can be started or stopped at a moment’s notice.** This facilitates fast elastic scaling, rapid deployment of code or config changes, and robustness of production deploys. Docker containers align with this factor very strongly especially when you have proper **Process Isolation** in your codebase disposibility is enhanced. If a container fails or needs to be replaced, it can be easily terminated and a new one can take its place, ensuring the overall system's availability and resilience.","id":"237c9e8f61d1f14c","x":1644,"y":-1532,"width":402,"height":390,"color":"#d721e4"},
		{"type":"text","text":"### Stateless mean no data is stored in the local variables","id":"13fe755953796d1a","x":1252,"y":-1472,"width":268,"height":120,"color":"6"},
		{"type":"text","text":"# Disposability","id":"784e4ca55505a259","x":1667,"y":-1594,"width":357,"height":60,"color":"#d721e4"},
		{"type":"text","text":"## Prod","id":"047e95803db925ef","x":-744,"y":-1198,"width":138,"height":60,"color":"5"},
		{"type":"text","text":"10. Dev/prod parity: The development, staging, and production environments should be as similar as possible. Docker containers help with parity by allowing you to package your codebase and its dependencies improves consistency across different environments and reducing the likelihood of environment-related issues.","id":"a19f339f3f559659","x":-698,"y":-918,"width":402,"height":250,"color":"#008419"},
		{"type":"text","text":"```yaml\nversion: '3.3'\nservices:\n  postgres:\n    image: postgres:13.0-alpine\n    ports:\n      - \"5432:5432\" \n    environment:\n        POSTGRES_USER: ctp_user\n        POSTGRES_PASSWORD: ctp_pass\n        POSTGRES_DB: app2020_docker\n\n  server: \n    build: \n      context: .\n      dockerfile: ./api/Dockerfile\n    volumes: \n      - './api:/usr/app/api'\n      - /usr/app/node_modules\n    command: npm run docker_dev\n    ports:\n      - \"8000:8000\"\n    depends_on: \n      - postgres\n    environment:\n      PORT: 8000\n      NODE_ENV: \"docker\"\n      SESSION_SECRET: \"fa6312l3&0pzjcq#x3sadopgllurz#wknu*s=o#63ouv^entei\"\n      CHOKIDAR_USEPOLLING: \"true\"\n\n  client:\n    build:\n      context: ./client/\n      dockerfile: ./Dockerfile\n    stdin_open: true    \n    volumes: \n      - ./client:/usr/app\n      - /usr/app/node_modules\n    command: npm start\n    depends_on: \n      - server\n    ports:\n        - target: 3000\n          published: 4960\n          protocol: tcp\n          mode: host\n    # If all else fails: SKIP_PREFLIGHT_CHECK: \"true\"\n\n    # npm ci\n    environment:\n      PROXY: \"http://server:8000\"\n      SKIP_PREFLIGHT_CHECK: \"true\"\n      CHOKIDAR_USEPOLLING: \"true\"\n\n```\n","id":"8a76de736e390daa","x":-1560,"y":-1284,"width":780,"height":1153},
		{"type":"text","text":"### Resource Utilization","id":"3844995077aa69fd","x":997,"y":-1202,"width":255,"height":60,"color":"#5250d3"},
		{"type":"text","text":"# Processes","id":"a66cd05f8a1cdd82","x":946,"y":-1088,"width":357,"height":60,"color":"#0084ff"},
		{"type":"text","text":"### Fault Tolerance","id":"45890a497a4a3316","x":997,"y":-1262,"width":255,"height":60,"color":"#5250d3"},
		{"type":"text","text":"### <center>  Environments </center>","id":"0289bac2b637b9f9","x":-639,"y":-1320,"width":249,"height":60},
		{"type":"text","text":"# Dev/Prod Parity","id":"dce6236514e55496","x":-675,"y":-980,"width":357,"height":60,"color":"#008419"},
		{"type":"text","text":"6. Processes: Your app should be executed as one or more stateless processes. Docker containers are designed to be lightweight, isolated, and stateless, making it easier to scale and manage multiple instances of the app and it process. A single container should run a single foreground process, and you can use multiple containers to run the various pieces of a more complex application. ","id":"0044b64cae880df8","x":923,"y":-1026,"width":402,"height":294,"color":"#0084ff"},
		{"type":"text","text":"## Dev","id":"6881a98bb8b9f5e4","x":-581,"y":-1196,"width":120,"height":60,"color":"#ac6c6c"},
		{"type":"text","text":"## Testing","id":"d1672d25dff0fa51","x":-440,"y":-1196,"width":180,"height":60,"color":"3"}
	],
	"edges":[
		{"id":"28aa1ba40b2b53d5","fromNode":"f5c994ed978f387d","fromSide":"bottom","toNode":"d1672d25dff0fa51","toSide":"top","color":"3"},
		{"id":"aeda173064e99a89","fromNode":"f5c994ed978f387d","fromSide":"bottom","toNode":"047e95803db925ef","toSide":"top","color":"5"},
		{"id":"db893097860bf574","fromNode":"56e9dc8872bf1c00","fromSide":"left","toNode":"f5c994ed978f387d","toSide":"right","color":"1","label":"External"},
		{"id":"cdbef45b788cf686","fromNode":"56e9dc8872bf1c00","fromSide":"right","toNode":"147b6815df4c27d9","toSide":"top","color":"1"},
		{"id":"8eb53425f5263744","fromNode":"56e9dc8872bf1c00","fromSide":"right","toNode":"1f8a63011e8478b5","toSide":"left","color":"1"},
		{"id":"1cc04a7e0e638583","fromNode":"56e9dc8872bf1c00","fromSide":"left","toNode":"a243d63a9c435823","toSide":"top","color":"1"},
		{"id":"c905b0bca673a12c","fromNode":"56e9dc8872bf1c00","fromSide":"right","toNode":"9a1441edd06b9f59","toSide":"left","color":"1"},
		{"id":"0d9274556e26c25c","fromNode":"56e9dc8872bf1c00","fromSide":"right","toNode":"0044b64cae880df8","toSide":"left","color":"1"},
		{"id":"6956a337d4f0de00","fromNode":"237c9e8f61d1f14c","fromSide":"left","toNode":"0044b64cae880df8","toSide":"right","color":"#d721e4"},
		{"id":"af36afde80ad29cc","fromNode":"237c9e8f61d1f14c","fromSide":"left","toNode":"1f8a63011e8478b5","toSide":"right","color":"#d721e4"},
		{"id":"04f02f84cd1cb193","fromNode":"237c9e8f61d1f14c","fromSide":"left","toNode":"9c69777429a16b39","toSide":"right","color":"#d721e4"},
		{"id":"93a09625c0461ccd","fromNode":"237c9e8f61d1f14c","fromSide":"left","toNode":"9a1441edd06b9f59","toSide":"right","color":"#d721e4"},
		{"id":"3bfc467233e01244","fromNode":"56e9dc8872bf1c00","fromSide":"right","toNode":"26c8d8262d44d256","toSide":"left","color":"1"},
		{"id":"7b5c375b588dc1ff","fromNode":"56e9dc8872bf1c00","fromSide":"right","toNode":"784e4ca55505a259","toSide":"left","color":"1"},
		{"id":"db4c606fb812e250","fromNode":"a66cd05f8a1cdd82","fromSide":"bottom","toNode":"1f8a63011e8478b5","toSide":"bottom","color":"6"},
		{"id":"484e54a2da3993c6","fromNode":"56e9dc8872bf1c00","fromSide":"right","toNode":"9c69777429a16b39","toSide":"left","color":"1"},
		{"id":"f3525258edecfdb8","fromNode":"56e9dc8872bf1c00","fromSide":"bottom","toNode":"00f95b49f3bec496","toSide":"top","color":"1"},
		{"id":"1bd7f35dec330841","fromNode":"d1672d25dff0fa51","fromSide":"bottom","toNode":"dce6236514e55496","toSide":"top","color":"3"},
		{"id":"1c47cd68a755704a","fromNode":"0289bac2b637b9f9","fromSide":"bottom","toNode":"6881a98bb8b9f5e4","toSide":"top","color":"#ac6c6c"},
		{"id":"425334a28c315911","fromNode":"6881a98bb8b9f5e4","fromSide":"bottom","toNode":"dce6236514e55496","toSide":"top","color":"#ac6c6c"},
		{"id":"404ca3f41704ecc1","fromNode":"047e95803db925ef","fromSide":"bottom","toNode":"dce6236514e55496","toSide":"top","color":"5"},
		{"id":"b6b390df0fa0b905","fromNode":"237c9e8f61d1f14c","fromSide":"left","toNode":"02d203c03b445c3b","toSide":"top","color":"#d721e4"},
		{"id":"a9c20b7e5b7977b9","fromNode":"0044b64cae880df8","fromSide":"bottom","toNode":"fb0de56d4024a980","toSide":"top","color":"6"},
		{"id":"c42c338dca3aa5eb","fromNode":"1e4c931185f3893a","fromSide":"left","toNode":"f5c994ed978f387d","toSide":"right","color":"#00e7eb"},
		{"id":"756ca637820c3b11","fromNode":"56e9dc8872bf1c00","fromSide":"left","toNode":"1e4c931185f3893a","toSide":"right","color":"1"},
		{"id":"2d427c6036bf0694","fromNode":"237c9e8f61d1f14c","fromSide":"left","toNode":"26c8d8262d44d256","toSide":"right","color":"#d721e4"},
		{"id":"18edac2df0b4c461","fromNode":"6cc6cbb1be7ba8d8","fromSide":"bottom","toNode":"debdd86c106f9720","toSide":"bottom","fromEnd":"arrow","color":"2"},
		{"id":"dc7d4f6a6e32f829","fromNode":"237c9e8f61d1f14c","fromSide":"left","toNode":"147b6815df4c27d9","toSide":"right","color":"#d721e4"}
	]
}